package code{		import code.*;		import com.adobe.nativeExtensions.*;		import flash.display.MovieClip;	import flash.display.SimpleButton;	import flash.display.Sprite;	import flash.display.StageQuality;	import flash.display.StageScaleMode;	import flash.system.Capabilities;		import flash.events.Event;	import flash.events.EventDispatcher;	import flash.events.KeyboardEvent;	import flash.events.MouseEvent;		import flash.utils.Timer;	import flash.events.TimerEvent;		import flash.events.TouchEvent;	import flash.events.TransformGestureEvent;	import flash.ui.Multitouch;	import flash.ui.MultitouchInputMode;			import net.hires.debug.Stats;	//import com.bit101.components.Label;			public class Main extends MovieClip	{								public static var master:Boolean=false;		// if(Capabilities.cpuArchitecture=="ARM") //x86 = ordi, ARM = tablette		 if(Capabilities.cpuArchitecture=="x86") master = true;else master = false; //si c'est l'ordi ? a desactiver pour tester les tablettes sur ordi laptop									/// classes		public var _reseau:reseau=new reseau();				public var osManage:osManager = new osManager();			//var _vibrate:Vibration = new Vibration();						// boutons		public var debug_btn:SimpleButton;		public var menu_btn:SimpleButton;		public var ver_runner_btn:SimpleButton;		public var ver_appr_btn:SimpleButton;		public var cache:MovieClip;						//objets		public var chap:String;		public var Seq2:seq2;								public function Main()		{			addEventListener(Event.ADDED_TO_STAGE, stageAddHandler);			super();		}		public function stageAddHandler(e:Event):void		{			removeEventListener(Event.ADDED_TO_STAGE, stageAddHandler);				/// ecouteurs boutons			menu_btn.addEventListener(MouseEvent.MOUSE_DOWN, ClickHandler);			debug_btn.addEventListener(MouseEvent.MOUSE_DOWN, ClickHandler);					ver_appr_btn.addEventListener(MouseEvent.MOUSE_DOWN, ClickHandler);			ver_runner_btn.addEventListener(MouseEvent.MOUSE_DOWN, ClickHandler);						showmenu(true);					//	cache=new Cache();		//	this.addChildat (cache, O);			//cache.x = -10;			//cache.y = -10;						// ajouts des classes systemes			this.addChildAt(_reseau, 0);			this.addChild(osManage);			_reseau.visible=false;						stage.quality = StageQuality.LOW;		}				public function recoit(recu: String):void		{		 var body:Array= recu.split("/") ;				if (body[0] == "Seq2") {			if (body[1] == "GO") {				Seq2=new seq2();				addChildAt(Seq2, 1);				chap = "Seq2";			}			if (body[1] == "FIN") Seq2.RemoveFromStage();			Seq2.recoit(body);		}				if (body[0] == "targetIP") _reseau.targetIP.text = body[1];				}		///////////    ///////	/////		///////						function showmenu(disp:Boolean){			debug_btn.visible=disp;			ver_appr_btn.visible=disp;			ver_runner_btn.visible=disp;					}						public function ClickHandler(event:MouseEvent):void		{				switch( event.target )			{											case ver_appr_btn:					break;				case ver_runner_btn:									break;							case debug_btn:					if (_reseau.visible==true){						_reseau.visible=false;					}else{_reseau.visible=true;					}					break;								case menu_btn:					if (debug_btn.visible==true){						showmenu(false);					}else{						showmenu(true);					}					break;				}			}						}		}